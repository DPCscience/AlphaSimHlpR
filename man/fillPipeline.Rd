% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InitializationFunctions.R
\name{fillPipeline}
\alias{fillPipeline}
\title{fillPipeline function}
\usage{
fillPipeline(founders, bsp = NULL, SP)
}
\arguments{
\item{founders}{Pop-class object of the founders of the breeding program}

\item{bsp}{A list of product pipeline parameters.  It contains nParents, nCrosses, nProgeny, checks, nStages, errVars, nReps, nEntries, nChks, stageNames, and nCyclesToKeepRecords.  See \code{runBreedingScheme} for details}
}
\value{
A \code{records} object. A list of lists containing nStages+1 lists. The first list contains the F1 progeny of individuals derived from the \code{parents}. The remaining lists contain one Pop-class object each, with a number of individuals equal to nEntries for that stage. The indivduals have been phenotyped using \code{setPheno}
}
\description{
function to create initial records at the start of a simulation
}
\details{
This is a quick and dirty way to create a records object that will be used to simulate breeding schemes
}
\examples{
bsp <- specifyPipeline()
bsp <- specifyPopulation(bsp)
records <- with(bsp, {founderPop <- runMacs(nInd=nFounders, nChr=nChr, segSites=segSites)
SP <- SimParam$new(founderPop)
SP$addTraitA(nQtlPerChr=nQTL, var=genVar)
SP$addSnpChip(nSNP)
founders <- newPop(founderPop, simParam=SP)
bsp <- c(bsp, checks=list(NULL))
records <- fillPipeline(founders, bsp, SP)
records
})

}
